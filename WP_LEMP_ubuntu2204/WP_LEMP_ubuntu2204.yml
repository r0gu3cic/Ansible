---
- hosts: servers
  become: true
  vars_files:
    - vars/default.yml
  tasks:
# Ansible prefer aptitude over apt
    - name: Install aptitude
      apt: name={{item}} update_cache=yes state=latest force_apt_get=yes
      loop: ['aptitude']
# Install LEMP packages
    - name: Install LEMP packages
      apt: name={{item}} update_cache=yes state=latest
      loop: ['nginx', 'mysql-server', 'python3-pymysql', 'php-fpm', 'php-mysql', 'php-curl', 'php-gd', 'php-intl', 'php-mbstring', 'php-soap', 'php-xml', 'php-xmlrpc', 'php-zip']
# Nginx Configuration
    - name: Sets nginx conf file
      template:
        src: "files/nginx.conf.j2"
        dest: "/etc/nginx/sites-available/{{http_conf}}"
    - name: Enables nginx new site
      file:
        src: "/etc/nginx/sites-available/{{http_conf}}"
        dest: "/etc/nginx/sites-enabled/{{http_conf}}"
        state: link
      notify: Reload Nginx  
    - name: Removes nginx "default" site
      file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
      notify: Reload Nginx   
# MySQL configuration
    - name: Sets the root password for mysql
      mysql_user: 
        name: root 
        password: "{{mysql_root_password}}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
    - name: Removes all anonymous mysql user accounts 
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{mysql_root_password}}"
    - name: Removes the mysql test database
      mysql_db: 
        name: test 
        state: absent
        login_user: root
        login_password: "{{mysql_root_password}}"
    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{mysql_root_password}}"
    - name: Create MySQL user for WordPress
      mysql_user:
        name: "{{mysql_user}}"
        password: "{{mysql_password}}"
        priv: "{{mysql_db}}.*:ALL"
        state: present
        login_user: root
        login_password: "{{mysql_root_password}}"
# WordPress installation and configuration
    - name: Creates directory for WordPress
      file:
        path: /var/www/{{http_host}}
        state: directory
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{http_host}}"
        remote_src: yes
        creates: "/var/www/{{http_host}}/wordpress"
    - name: Set ownership
      file:
        path: "/var/www/{{http_host}}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{http_host}}/wordpress/ -type d -exec chmod 755 {} \\;"
    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{http_host}}/wordpress/ -type f -exec chmod 644 {} \\;"
    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{http_host}}/wordpress/wp-config.php"
# UFW configuration
    - name: "UFW - Allow HTTP on port {{http_port}}"
      ufw:
        rule: allow
        port: "{{http_port}}"
        proto: tcp
      notify:
        - reload ufw
    - name: "UFW - Allow SSH on port 22"
      ufw:
        rule: allow
        name: OpenSSH
      notify:
        - reload ufw
    - name: Enable UFW
      ufw:
        state: enabled
    - name: Enable all necessary services and restart them
      systemd:
        state: restarted
        name: "{{item}}"
        enabled: yes
        masked: no
      loop: "{{['nginx.service', 'mysql.service', 'php8.1-fpm.service']|flatten(levels=1)}}"
# Used handlers
  handlers:
    - name: Reload Nginx
      service:
        name: nginx
        state: reloaded
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted  
    - name: reload ufw
      ufw:
        state: reloaded